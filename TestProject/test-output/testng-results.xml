<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="LoadDepartment" duration-ms="238" started-at="2020-08-30T15:02:19Z" finished-at="2020-08-30T15:02:20Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="101" started-at="2020-08-30T15:02:19Z" finished-at="2020-08-30T15:02:19Z">
      <class name="test.DemoFramework">
        <test-method status="PASS" signature="test1()[pri:0, instance:test.DemoFramework@6d78f375]" name="test1" duration-ms="20" started-at="2020-08-30T20:32:19Z" finished-at="2020-08-30T20:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="FAIL" signature="test2()[pri:0, instance:test.DemoFramework@6d78f375]" name="test2" duration-ms="10" started-at="2020-08-30T20:32:19Z" finished-at="2020-08-30T20:32:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at test.DemoFramework.test2(DemoFramework.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
      </class> <!-- test.DemoFramework -->
      <class name="test.Demo3">
        <test-method status="PASS" signature="test6()[pri:0, instance:test.Demo3@548b7f67]" name="test6" is-config="true" duration-ms="1" started-at="2020-08-30T20:32:19Z" finished-at="2020-08-30T20:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method status="PASS" signature="test8()[pri:0, instance:test.Demo4@7ac7a4e4]" name="test8" is-config="true" duration-ms="1" started-at="2020-08-30T20:32:19Z" finished-at="2020-08-30T20:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method status="PASS" signature="test5()[pri:0, instance:test.Demo3@548b7f67]" name="test5" duration-ms="3" started-at="2020-08-30T20:32:19Z" finished-at="2020-08-30T20:32:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
      </class> <!-- test.Demo3 -->
    </test> <!-- Test -->
    <test name="Test1" duration-ms="42" started-at="2020-08-30T15:02:20Z" finished-at="2020-08-30T15:02:20Z">
      <class name="test.Demo4">
        <test-method status="PASS" signature="test7()[pri:0, instance:test.Demo4@7ac7a4e4]" name="test7" is-config="true" duration-ms="1" started-at="2020-08-30T20:32:20Z" finished-at="2020-08-30T20:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
      </class> <!-- test.Demo4 -->
      <class name="test.Demo2">
        <test-method status="PASS" signature="test3(java.lang.String)[pri:0, instance:test.Demo2@7c16905e]" name="test3" is-config="true" duration-ms="25" started-at="2020-08-30T20:32:19Z" finished-at="2020-08-30T20:32:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="dataprovidertest(java.lang.String, java.lang.String)[pri:0, instance:test.Demo2@7c16905e]" name="dataprovidertest" duration-ms="5" started-at="2020-08-30T20:32:20Z" data-provider="getData" finished-at="2020-08-30T20:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[US1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PS1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataprovidertest -->
        <test-method status="PASS" signature="dataprovidertest(java.lang.String, java.lang.String)[pri:0, instance:test.Demo2@7c16905e]" name="dataprovidertest" duration-ms="4" started-at="2020-08-30T20:32:20Z" data-provider="getData" finished-at="2020-08-30T20:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[US2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PS2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataprovidertest -->
        <test-method status="PASS" signature="dataprovidertest(java.lang.String, java.lang.String)[pri:0, instance:test.Demo2@7c16905e]" name="dataprovidertest" duration-ms="5" started-at="2020-08-30T20:32:20Z" data-provider="getData" finished-at="2020-08-30T20:32:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[US3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PS3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dataprovidertest -->
        <test-method status="PASS" signature="test4()[pri:0, instance:test.Demo2@7c16905e]" name="test4" is-config="true" duration-ms="1" started-at="2020-08-30T20:32:20Z" finished-at="2020-08-30T20:32:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- test.Demo2 -->
    </test> <!-- Test1 -->
  </suite> <!-- LoadDepartment -->
</testng-results>
